rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects - users can only access their own projects
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null;
      // Temporary rule for cleanup script - allow updates during migration
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == "FFxYPE9U6Derm2ZzwLgbZ068jmpE");
    }
    
    // Documents - users can only access documents in their projects
    match /documents/{documentId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null;
      // Temporary rule for cleanup script - allow updates during migration
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == "FFxYPE9U6Derm2ZzwLgbZ068jmpE");
    }
    
    // Document versions - users can only access versions of their documents
    match /documentVersions/{versionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null;
      // Temporary rule for cleanup script - allow updates during migration
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == "FFxYPE9U6Derm2ZzwLgbZ068jmpE");
    }
    
    // Suggestions - users can only access suggestions for their documents
    match /suggestions/{suggestionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null;
      // Temporary rule for cleanup script - allow updates during migration
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == "FFxYPE9U6Derm2ZzwLgbZ068jmpE");
    }
    
    // Project templates - anyone can read, only admins can write
    match /projectTemplates/{templateId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify templates
    }
    
    // User preferences: users can only access their own preferences
    match /userPreferences/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Analytics: users can only access their own analytics
    match /analytics/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
  }
} 