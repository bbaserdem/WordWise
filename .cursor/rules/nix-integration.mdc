---
description: Best practices for setting up local dev environment in NixOS; both for flake and for choosing node packages.
globs: flake.nix
---

# NixOS

## Overview
Make sure we can develop on NixOS, and still have it run elsewhere.
We will be using flakes, and the current shell will have direnv to automatically load our dev shell.

## Guidelines for writing to flake.nix
1. inputs.nixpkgs should point to the unstable branch of nixpkgs.
2. Use flake-utils to make flake.nix more readable
3. Keep our flake as a hybrid model; prefer to fetch node packages using pnpm.
4. Avoid shell hooks that have output to avoid clutter when entering a dev shell.
5. Keep our flake a single file, do not modularize flake.nix into seperate files.

## Guidelines for picking tech stack
- Don't suggest packages and software that is known to be incompatible with NixOS.
- State when a software I want to use is incompatible developing with NixOS.

## Example nix flake
```nix
{
  description = "Next.js + Firebase + Tailwind dev shell (NixOS)";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = { self, nixpkgs, flake-utils }:
    flake-utils.lib.eachDefaultSystem (system:
    let
      pkgs = nixpkgs.legacyPackages.${system};
    in {
      devShell = pkgs.mkShell {
        buildInputs = with pkgs; [
          nodejs_20
          pnpm
          git

          # Unix utilities
          coreutils # Basic file, shell and text manipulation utilities
          findutils # Find, locate, and xargs commands
          gnugrep # GNU grep, egrep and fgrep
          gnused # GNU stream editor
          ripgrep # Fast line-oriented search tool
          fd # Simple, fast and user-friendly alternative to find
          bat # Cat clone with syntax highlighting
          eza # Modern replacement for ls
          jq # Lightweight JSON processor
          watch # Execute a program periodically
          curl # Command line tool for transferring data
          wget # Internet file retriever
          tree # Display directories as trees
          unzip # Unzip utility
          zip # Zip utility
        ];

        shellHook = ''
          # Make executables findable from node_modules
          export PATH="./node_modules/.bin:$PATH"
        '';
      };
    });
}
```
